on damage:
	if attacker and victim is not set:
		stop
	if attacker is not a player:
		stop
	set {_damage} to damage
	if {_damage} > victim's health:
		set {_damage} to victim's health
	damage_registerDamage(attacker, victim, {_damage})

on death:
	set {_topDamagersRaw::*} to damage_getTopDamager(victim, 3, true)
	send "&aTop 3 damagers on &e%victim%&a:" to all players
	loop {_topDamagersRaw::*}:
		set {_split::*} to {_topDamagersRaw::%loop-index%} split by ":"
		set {_playerNames::*} to api_getPlayerName({_split::1}, false)
		set {_playerNamesAmount} to (amount of {_playerNames::*})
		send "&e##%loop-index% &a- &e%{_playerNames::%{_playerNamesAmount}%}% &a(&e%{_split::2}% Damage&a)" to all players
	damage_removeVictimData(victim)

function damage_registerDamage(attacker: entity, victim: entity, damage: number):
	set {_victimUUID} to ({_victim}'s UUID)
	set {_attackerUUID} to ({_attacker}'s UUID)
	if {-damage::%{_victimUUID}%::%{_attackerUUID}%} is not set:
		set {-damage::%{_victimUUID}%::%{_attackerUUID}%} to 0
	add {_damage} to {-damage::%{_victimUUID}%::%{_attackerUUID}%}

function damage_getTopDamager(victim: entity, maximumResult: number, returnDamage: boolean = true) :: texts:
	set {_victimUUID} to ({_victim}'s UUID)
	if (amount of {-damage::%{_victimUUID}%::*}) < {_maximumResult}:
		set {_maximumResult} to (amount of {-damage::%{_victimUUID}%::*})
	loop {_maximumResult} times:
		loop {-damage::%{_victimUUID}%::*}:
			if {_used::%loop-index%} is set:
				set {_notCount} to true
			else if {_loopTopDamage} > {-damage::%{_victimUUID}%::%loop-index%}:
				set {_notCount} to true
			if {_notCount} is not set:
				set {_loopTopUUID} to loop-index
				set {_loopTopDamage} to {-damage::%{_victimUUID}%::%loop-index%}
			delete {_notCount}
		if {_returnDamage} is true:
			add "%{_loopTopUUID}%:%{_loopTopDamage}%" to {_return::*}
		else:
			add "%{_loopTopUUID}%" to {_return::*}
		set {_used::%{_loopTopUUID}%} to loop-number
		delete {_loopTopDamage}
	return {_return::*}

function damage_removeVictimData(victim: entity):
	set {_victimUUID} to ({_victim}'s UUID)
	delete {-damage::%{_victimUUID}%::*}
